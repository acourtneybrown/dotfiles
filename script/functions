# Check if the Xcode license is agreed to and agree if not.
install_updates() {
  if softwareupdate -l 2>&1 | grep -q "No new software available."; then
    echo "No software updates to install"
  else
    echo "Installing software updates:"
    sudo softwareupdate --install --all
    xcode_license
  fi
}

xcode_license() {
  if /usr/bin/xcrun clang 2>&1 | grep -q license; then
    if [ -n "FSTRAP_INTERACTIVE" ]; then
      echo "Asking for Xcode license confirmation:"
      sudo xcodebuild -license accept
    else
      abort "Run 'sudo xcodebuild -license' to agree to the Xcode license."
    fi
  fi
}

escape() {
  printf '%s' "${1//\'/\'}"
}

abort() {
  echo "!!! $*" >&2
  exit 1
}

is_mac() {
  [ $(uname -s) = "Darwin" ]
}

is_linux() {
  [ $(uname -s) = "Linux" ]
}

sudo_keepalive() {
  # Ask for the administrator password upfront
  sudo -v

  # Keep-alive: update existing `sudo` time stamp until current script has finished
  while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &
}

sudo_check_then_alive() {
  # We want to always prompt for sudo password at least once rather than doing
  # root stuff unexpectedly.
  sudo --reset-timestamp

  sudo_keepalive
}
