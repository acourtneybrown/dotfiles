#!/usr/bin/env bash

function op_check_garbage_passwords() {
	local garbage_vault="${1:-ai37vtvl2day77mrnfu6kclega}"
	local op_user="${2:-acourtneybrown@gmail.com}"
	local id
	local item
	local fields
	local pw
    declare -A idForPw

	op vault user grant --vault "$garbage_vault" --user "$op_user" --permissions allow_viewing

	for id in $(op item list --categories Login --format=json | jq -r '.[] | select(.id != null) | .id'); do
	    item=$(op item get "$id" --format=json)
	    if [[ $item != null ]]; then
	    	fields=$(jq -r '.fields' <<<"$item")
	        if [[ $fields != null ]]; then
	            pw=$(jq -r '.[] | select(.id=="password").value' <<<"$fields")
	        fi

	        if [[ $pw != null ]]; then
	            if [[ ${idForPw[$pw]} ]]; then
	            	echo "Duplicate password found: ${idForPw[$pw]} and $id"
	            else
	            	idForPw[$pw]=$id
	            fi
	        else
	        	echo "Empty password for id $id"
	        fi
	    fi
	done

	op vault user revoke --vault "$garbage_vault" --user "$op_user"
}

op_check_garbage_passwords "$@"
