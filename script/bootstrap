#!/usr/bin/env bash

set -e
cd "$(dirname "${0}")/.."

# shellcheck disable=SC1091
. script/functions

# Set up dotdrop dependencies
git submodule update --init --recursive
git submodule update --remote dotdrop

script/setup-dotdrop-venv.sh

# Install oh-my-zsh
if [ ! -d ~/.oh-my-zsh ]; then
  if command -v curl >/dev/null; then
    sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh) --unattended"
  elif command -v wget >/dev/null; then
    sh -c "$(wget https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh -O -) --unattended"
  else
    abort "Either curl or wget must be installed"
  fi
fi

# Install all dotfiles into the home directory
ensure_command "yq"

function ensure_profile_exists() {
  local profile

  profile=${1}
  if [ -z "$(yq e ".profiles.\"${profile}\" // \"\"" config.yaml)" ]; then
    ensure_profile_includes "${PROFILE}" default
  fi
}

function ensure_profile_includes() {
  local profile
  local include

  profile=${1}
  include=${2}

  present=$(yq e "[\"${include}\"] - (.profiles.\"${profile}\" // \"\").include | length == 0" config.yaml)
  if [[ ${present} == "false" ]]; then
    yq eval ".profiles.\"${profile}\".\"include\" += [\"${include}\"]" -i config.yaml
  fi
}

# create a new profile (if necessary) and include default
PROFILE=$(hostname)
ensure_profile "${PROFILE}"
if is_mac; then
  ensure_profile_includes "${PROFILE}" mac
elif is_linux; then
  ensure_profile_includes "${PROFILE}" linux
fi

for extra in "${@}"; do
  ensure_profile_includes "${PROFILE}" "${extra}"
done

script/extract-onepassword-secrets.sh

./dotdrop.sh install --force --profile="${PROFILE}"

for extra in "${@}"; do
  if [ -f "./script/bootstrap-${extra}" ]; then
    "./script/bootstrap-${extra}"
  fi
done
